{"version":3,"sources":["components/aside/index.jsx","components/content/index.jsx","App.js","index.js"],"names":["onSubmitHandler","evt","setData","setIsLoading","setStatus","a","preventDefault","formData","FormData","target","fetch","method","headers","Token","body","JSON","stringify","query","region_code","get","raion","settlement","street","house","building","block","flat","grouped","data","status","statusText","json","resp","console","log","Aside","isLoading","useState","isNumberType","setNumberType","className","type","checked","onChange","name","onSubmit","required","placeholder","defaultValue","disabled","join","ContentItem","CADNOMER","ADDRESS","copyItems","value","navigator","clipboard","writeText","Content","table","useRef","error","length","found","onClick","objects","map","document","getSelection","setBaseAndExtent","current","childNodes","ref","item","key","App","isLoadeng","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17cd2524.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nconst onSubmitHandler = async (evt, setData, setIsLoading, setStatus) => {\n  setIsLoading(true);\n  evt.preventDefault();\n  const formData = new FormData(evt.target);\n\n  try {\n    const data = await fetch(\"https://apirosreestr.ru/api/cadaster/search\", {\n      method: \"POST\",\n      headers: {\n        Token: \"GRGW-EZEB-K7SH-YTSL\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: {\n          region_code: formData.get(\"region_code\"),\n          raion: formData.get(\"raion\"),\n          settlement: formData.get(\"settlement\"),\n          street: formData.get(\"street\"),\n          house: formData.get(\"house\"),\n          building: formData.get(\"building\"),\n          block: formData.get(\"block\"),\n          flat: formData.get(\"flat\"),\n        },\n        grouped: 0,\n      }),\n    });\n    setStatus([data.status, data.statusText]);\n    const resp = await data.json();\n    console.log(resp);\n    setData(resp);\n    setIsLoading(false);\n  } catch (err) {\n    console.log(err);\n    setIsLoading(false);\n  }\n};\n\nfunction Aside({ setData, isLoading, setIsLoading }) {\n  const [status, setStatus] = useState(null);\n  const [isNumberType, setNumberType] = useState(false);\n\n  return (\n    <div className=\"Aside\">\n      <label>\n        По кадастровому номеру\n        <input\n          type=\"checkbox\"\n          checked={isNumberType}\n          onChange={(evt) => setNumberType(evt.target.checked)}\n          name=\"isNumberType\"\n        />\n      </label>\n      <form\n        onSubmit={(evt) =>\n          onSubmitHandler(evt, setData, setIsLoading, setStatus)\n        }\n      >\n        {isNumberType ? (\n          <label>\n            кадастровый номер\n            <input\n              name=\"query\"\n              type=\"text\"\n              required\n              placeholder=\"кадастровый номер\"\n            />\n          </label>\n        ) : (\n          <>\n            <label>\n              номер региона, обязательно\n              <input\n                name=\"region_code\"\n                type=\"text\"\n                required\n                placeholder=\"номер региона, обязательно\"\n                defaultValue=\"57\"\n              />\n            </label>\n            <label>\n              название города или района\n              <input\n                name=\"raion\"\n                type=\"text\"\n                placeholder=\"название города или района\"\n                defaultValue=\"Орел\"\n              />\n            </label>\n            <label>\n              населенный пункт, без типа\n              <input\n                name=\"settlement\"\n                type=\"text\"\n                placeholder=\"населенный пункт, без типа\"\n              />\n            </label>\n            <label>\n              улица, без указания типа\n              <input\n                name=\"street\"\n                type=\"text\"\n                placeholder=\"улица, без указания типа\"\n              />\n            </label>\n            <label>\n              номер дома\n              <input name=\"house\" type=\"text\" placeholder=\"номер дома\" />\n            </label>\n            <label>\n              строение\n              <input name=\"building\" type=\"text\" placeholder=\"строение\" />\n            </label>\n            <label>\n              корпус\n              <input name=\"block\" type=\"text\" placeholder=\"корпус\" />\n            </label>\n            <label>\n              квартира или помещение\n              <input\n                name=\"flat\"\n                type=\"text\"\n                placeholder=\"квартира или помещение\"\n              />\n            </label>\n          </>\n        )}\n\n        <footer>\n          <button disabled={isLoading}>Найти</button>{\" \"}\n          {status && status.join(\" \")}\n        </footer>\n      </form>\n    </div>\n  );\n}\n\nexport default Aside;\n","import React, { useRef } from \"react\";\nimport \"./style.scss\";\n\nconst ContentItem = ({ CADNOMER, ADDRESS }) => {\n  return (\n    <tr className=\"Content__item\">\n      <th>{CADNOMER}</th>\n      <td>{ADDRESS}</td>\n    </tr>\n  );\n};\n\nconst copyItems = async (value) => {\n  try {\n    await navigator.clipboard.writeText(value);\n    console.log(\"Copied\");\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst Content = ({ data, isLoading }) => {\n  const table = useRef(null);\n  const error = !!data?.error?.length;\n  // data = {\n  //   found: 77,\n  //   objects: [{ CADNOMER: 123 }, { CADNOMER: 777 }],\n  // };\n\n  return (\n    <div className={`Content ${isLoading ? \"Content--loading\" : \"\"}`}>\n      {error && <div>Ошибка {JSON.stringify(data.error)} </div>}\n      {data && data.found && (\n        <div>\n          <div>\n            Найдено: {data.found}\n            <button\n              className=\"Content__copy\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                copyItems(\n                  data.objects.map(({ CADNOMER }) => CADNOMER).join(\" \")\n                );\n              }}\n            >\n              Копировать кадастровые номера\n            </button>\n            <button\n              className=\"Content__copy\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                const selection = document.getSelection();\n                selection.setBaseAndExtent(\n                  table.current,\n                  0,\n                  table.current,\n                  table.current.childNodes.length\n                );\n              }}\n            >\n              Выделить таблицу\n            </button>\n          </div>\n          <hr />\n          <div className=\"Content__list\" ref={table}>\n            <table>\n              <tbody>\n                {data.objects.map((item) => (\n                  <ContentItem key={item.CADNOMER} {...item} />\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { useState } from \"react\";\nimport Aside from \"components/aside\";\nimport Content from \"components/content\";\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div className=\"main\">\n      <Aside\n        setData={setData}\n        setIsLoading={setIsLoading}\n        isLoadeng={isLoading}\n      />\n      <Content data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}