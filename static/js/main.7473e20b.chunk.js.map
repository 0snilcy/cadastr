{"version":3,"sources":["components/aside/index.jsx","components/content/index.jsx","components/history/index.jsx","App.js","index.js"],"names":["setRequest","query","setData","setIsLoading","setStatus","a","fetch","method","headers","Token","body","JSON","stringify","grouped","data","status","statusText","json","console","log","onSubmitHandler","evt","preventDefault","formData","FormData","target","queryText","get","region_code","raion","settlement","street","house","building","block","flat","resp","objects","ADDRESS","date","Date","now","Aside","isLoading","useState","isNumberType","setNumberType","className","type","checked","onChange","name","onSubmit","required","placeholder","defaultValue","disabled","join","ContentItem","CADNOMER","copyItems","value","navigator","clipboard","writeText","Content","table","useRef","error","length","found","onClick","map","document","getSelection","setBaseAndExtent","current","childNodes","ref","item","key","getQueryFromObject","obj","Object","values","filter","el","loadData","parse","localStorage","getItem","sort","b","err","History","loadedData","setItem","saveData","id","title","App","isLoadeng","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7473e20b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nconst setRequest = async (query, setData, setIsLoading, setStatus) => {\n  try {\n    const data = await fetch(\"https://apirosreestr.ru/api/cadaster/search\", {\n      method: \"POST\",\n      headers: {\n        Token: \"GRGW-EZEB-K7SH-YTSL\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query,\n        grouped: 0,\n      }),\n    });\n\n    setStatus([data.status, data.statusText]);\n    return await data.json();\n  } catch (err) {\n    console.log(err);\n    setIsLoading(false);\n  }\n};\n\nconst onSubmitHandler = async (evt, setData, setIsLoading, setStatus) => {\n  setIsLoading(true);\n  evt.preventDefault();\n  const formData = new FormData(evt.target);\n  const queryText = formData.get(\"query\");\n  let query = queryText || {\n    region_code: formData.get(\"region_code\"),\n    raion: formData.get(\"raion\"),\n    settlement: formData.get(\"settlement\"),\n    street: formData.get(\"street\"),\n    house: formData.get(\"house\"),\n    building: formData.get(\"building\"),\n    block: formData.get(\"block\"),\n    flat: formData.get(\"flat\"),\n  };\n\n  setStatus(null);\n  setData(null);\n\n  try {\n    if (queryText) {\n      const resp = await setRequest(\n        queryText,\n        setData,\n        setIsLoading,\n        setStatus\n      );\n      query = resp.objects[0].ADDRESS;\n    }\n\n    const resp = await setRequest(query, setData, setIsLoading, setStatus);\n    resp.query = query;\n    resp.date = Date.now();\n\n    console.log(resp);\n    setData(resp);\n    setIsLoading(false);\n  } catch (err) {\n    console.log(err);\n    setIsLoading(false);\n  }\n};\n\nfunction Aside({ setData, isLoading, setIsLoading }) {\n  const [status, setStatus] = useState(null);\n  const [isNumberType, setNumberType] = useState(false);\n\n  return (\n    <section className=\"Aside\">\n      <h2>Поиск</h2>\n      <label>\n        По кадастровому номеру\n        <input\n          type=\"checkbox\"\n          checked={isNumberType}\n          onChange={(evt) => setNumberType(evt.target.checked)}\n          name=\"isNumberType\"\n        />\n      </label>\n      <form\n        onSubmit={(evt) =>\n          onSubmitHandler(evt, setData, setIsLoading, setStatus)\n        }\n      >\n        {isNumberType ? (\n          <label>\n            кадастровый номер\n            <input\n              name=\"query\"\n              type=\"text\"\n              required\n              placeholder=\"кадастровый номер\"\n            />\n          </label>\n        ) : (\n          <>\n            <label>\n              номер региона, обязательно\n              <input\n                name=\"region_code\"\n                type=\"text\"\n                required\n                placeholder=\"номер региона, обязательно\"\n                defaultValue=\"57\"\n              />\n            </label>\n            <label>\n              название города или района\n              <input\n                name=\"raion\"\n                type=\"text\"\n                placeholder=\"название города или района\"\n                defaultValue=\"Орел\"\n              />\n            </label>\n            <label>\n              населенный пункт, без типа\n              <input\n                name=\"settlement\"\n                type=\"text\"\n                placeholder=\"населенный пункт, без типа\"\n              />\n            </label>\n            <label>\n              улица, без указания типа\n              <input\n                name=\"street\"\n                type=\"text\"\n                placeholder=\"улица, без указания типа\"\n              />\n            </label>\n            <label>\n              номер дома\n              <input name=\"house\" type=\"text\" placeholder=\"номер дома\" />\n            </label>\n            <label>\n              строение\n              <input name=\"building\" type=\"text\" placeholder=\"строение\" />\n            </label>\n            <label>\n              корпус\n              <input name=\"block\" type=\"text\" placeholder=\"корпус\" />\n            </label>\n            <label>\n              квартира или помещение\n              <input\n                name=\"flat\"\n                type=\"text\"\n                placeholder=\"квартира или помещение\"\n              />\n            </label>\n          </>\n        )}\n\n        <footer>\n          <button disabled={isLoading}>Найти</button>{\" \"}\n          {status && status.join(\" \")}\n        </footer>\n      </form>\n    </section>\n  );\n}\n\nexport default Aside;\n","import React, { useRef } from \"react\";\nimport \"./style.scss\";\n\nconst ContentItem = ({ CADNOMER, ADDRESS }) => {\n  return (\n    <tr className=\"Content__item\">\n      <th>{CADNOMER}</th>\n      <td>{ADDRESS}</td>\n    </tr>\n  );\n};\n\nconst copyItems = async (value) => {\n  try {\n    await navigator.clipboard.writeText(value);\n    console.log(\"Copied\");\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst Content = ({ data, isLoading }) => {\n  const table = useRef(null);\n  const error = !!data?.error?.length;\n  // data = {\n  //   found: 77,\n  //   objects: [{ CADNOMER: 123 }, { CADNOMER: 777 }],\n  // };\n\n  return (\n    <section className={`Content ${isLoading ? \"Content--loading\" : \"\"}`}>\n      <h2>Результат</h2>\n      {error && <div>Ошибка {JSON.stringify(data.error)} </div>}\n      {data && data.found && (\n        <div>\n          <div>\n            Найдено: {data.found}\n            <button\n              className=\"Content__copy\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                copyItems(\n                  data.objects.map(({ CADNOMER }) => CADNOMER).join(\" \")\n                );\n              }}\n            >\n              Копировать кадастровые номера\n            </button>\n            <button\n              className=\"Content__copy\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                const selection = document.getSelection();\n                selection.setBaseAndExtent(\n                  table.current,\n                  0,\n                  table.current,\n                  table.current.childNodes.length\n                );\n              }}\n            >\n              Выделить таблицу\n            </button>\n          </div>\n          <hr />\n          <div className=\"Content__list\" ref={table}>\n            <table>\n              <tbody>\n                {data.objects.map((item) => (\n                  <ContentItem key={item.CADNOMER} {...item} />\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst KEY = \"history\";\n\nconst getQueryFromObject = (obj) =>\n  Object.values(obj)\n    .filter((el) => el)\n    .join(`, `);\n\nconst loadData = () => {\n  try {\n    const data = JSON.parse(localStorage.getItem(KEY)) || [];\n    data.sort((a, b) => a.date - b.date);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst saveData = (data) => {\n  const loadedData = loadData().filter((item) => {\n    if (typeof data.query === \"string\") {\n      return item.query !== data.query;\n    }\n\n    return getQueryFromObject(data) !== getQueryFromObject(item);\n  });\n  localStorage.setItem(KEY, JSON.stringify([...loadedData, data]));\n};\n\nconst History = ({ data, setData }) => {\n  if (data) {\n    saveData(data);\n  }\n\n  const loadedData = loadData();\n\n  return (\n    <section className=\"History\">\n      <h2>История</h2>\n      {loadedData.map((item, id) => {\n        const { objects, query } = item;\n\n        return (\n          <button\n            key={objects[0].CADNOMER + id}\n            type=\"button\"\n            title={objects[0].ADDRESS}\n            onClick={() => setData(item)}\n          >\n            {typeof query === \"string\" ? query : getQueryFromObject(query)}\n          </button>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default History;\n","import React, { useState } from \"react\";\nimport Aside from \"components/aside\";\nimport Content from \"components/content\";\nimport History from \"components/history\";\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <main className=\"main\">\n      <aside className=\"left\">\n        <Aside\n          setData={setData}\n          setIsLoading={setIsLoading}\n          isLoadeng={isLoading}\n        />\n        <History data={data} setData={setData} />\n      </aside>\n      <Content data={data} isLoading={isLoading} />\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}